cmake_minimum_required(VERSION 3.12)
project(Sofa.Component.IO.Misc LANGUAGES CXX)

set(SOFACOMPONENTIOMISC_SOURCE_DIR "src/sofa/component/io/misc")

set(HEADER_FILES
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/config.h.in
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/init.h
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/ReadState.h
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/ReadState.inl
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/WriteState.h
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/WriteState.inl
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/ReadTopology.h
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/ReadTopology.inl
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/InputEventReader.h
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/WriteTopology.h
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/WriteTopology.inl
)

set(SOURCE_FILES
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/init.cpp
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/ReadState.cpp
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/WriteState.cpp
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/ReadTopology.cpp
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/InputEventReader.cpp
    ${SOFACOMPONENTIOMISC_SOURCE_DIR}/WriteTopology.cpp
)

sofa_find_package(SofaSimulationCore REQUIRED)

add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES})
target_link_libraries(${PROJECT_NAME} PUBLIC SofaSimulationCore)

sofa_create_package_with_targets(
    PACKAGE_NAME ${PROJECT_NAME}
    PACKAGE_VERSION ${Sofa_VERSION}
    TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES
    INCLUDE_SOURCE_DIR "src"
    INCLUDE_INSTALL_DIR "${PROJECT_NAME}"
    RELOCATABLE "plugins"
)
